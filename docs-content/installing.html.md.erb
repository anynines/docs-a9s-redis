---
title: Installing and Configuring a9s Redis for PCF
owner: Partners
---

This topic describes how to install and configure a9s Redis for PCF.

##<a id='prerequisites'></a> Prerequisites

Before installing a9s Redis for PCF, ensure that you have installed and configured the products and tiles listed in [Requirements](./index.html#reqs).


##<a id='install'></a> Install and Configure a9s Redis for PCF

To install a9s Redis for PCF, perform the following steps:

1. Download the product file from the Pivotal Network.

2. Navigate to the Ops Manager Installation Dashboard and click **Import a Product**
to upload the product file.

3. Click **Add** next to the uploaded a9s Redis for PCF tile in the Ops Manager
**Available Products** view to add it to your staging area.

4. Click the newly added tile, then click **Settings** to review the configuration settings for each tab.
	See the following sections for more information on how to configure the properties on each side-tab:
	* [Assign AZs and Networks](#azs)
	* [Configure BOSH Errands](#errands)
	* [Configure Service Plans](#configure-service-instance)
	* [Configure Stemcells](#stemcell)

5. Click **Apply Changes** to deploy the service.

After installing the a9s Redis for PCF, it is available in the list of marketplace services. For more information, see [Using a9s Redis for PCF](./using.html).

##<a id="azs"></a>Assign AZs and Networks

Use **Assign AZs and Networks** to configure the location of service instance jobs. You should configure your network to balance cluster jobs between as many AZs as possible.

<%= image_tag("az-and-networks.png") %>

##<a id='errands'></a>Configure BOSH Errands

Use **Errands** to configure the BOSH Errands used by a9s Redis for PCF. For more information, see the [Understanding Lifecycle Errands](https://docs.pivotal.io/tiledev/tile-errands.html) topic.

<%= image_tag("a9s-redis-for-pcf-errands.png") %>

### Post-Deploy Errands

 * **Run BOSH Configurator**:
	This errand configures **a9s BOSH for PCF** so that it can provision Redis
	service instances. When enabled, this errand uploads the required
	stemcells in the BOSH release. Disabling this errand may speed up the
	deployment of all tiles.

	<p class="note"><strong>Note</strong>: To ensure your configuration remains up-to-date, disable this errand only when necessary.</p>

 * **Run Template Uploader**:
	This errand is required to configure generic components that are included in a9s Redis for PCF with Redis  configurations.
	Disabling this errand may speed up the deployment of all tiles.

	<p class="note"><strong>Note</strong>: To ensure your configuration remains up-to-date, disable this errand only when necessary.</p>

 * **Run Broker Registrar**:
	This errand registers the a9s Redis for PCF service broker
	at the Elastic Runtime. This causes the service be available in the Elastic Runtime
	marketplace.

 * **Run Smoke Tests**:
 This errand runs a series of basic tests against your a9s Redis for PCF
 installation to ensure that it is configured properly. Those tests may
 take a certain amount of time, probably over 30 minutes.

### Pre-Delete Errands

 * **Delete all a9s Redis instances**:
	This errand deletes all a9s Redis instances which were created with `cf create-service` by PCF end users.
	<p class="note"><strong>Attention</strong>: This is an absolutly destructive task and can't be undone. All VMs of the service instances will be deleted irrecoverably. In the case a service instance is bound to an app or service keys are existing, the errand will fail.</p>

 * **Run Broker Deregistrar**:
	This will deregister the a9s Redis for PCF service broker in Elastic Runtime. This errand removes the a9s Redis service from the Elastic Runtime marketplace.

##<a id="configure-service-instance"></a> Configure Service Plans

The size and types of VMs used to provision service instances of a given service plan are specified in the **IaaS Settings** of the **a9s BOSH for PCF** tile. For more information, see the [a9s BOSH for PCF](../a9s-bosh/installing.html) documentation.

Each service plan is defined in the following fields:

| Plan | Specs for | Field |
|------|-------|-------|
|redis-single-non-persistent-small| Virtual Machine<br /> Persistent Disk | Cloud properties for the VM Type Small<br /> Cloud properties for the Disk Type Small|
|redis-single-non-persistent-big| Virtual Machine<br /> Persistent Disk | Cloud properties for the VM Type Large<br /> Cloud properties for the Disk Type Big|

##<a id="stemcell"></a>Configure Stemcells

Use **Configure Stemcells** enable another stemcell than the default one. Click **Import Stemcell** to upload a new stemcell.

<%= image_tag("stemcell-tab.png") %>

##<a id='deployment_updater'></a>Upgrade Existing Service Instances After a Tile Update
This errand automatically updates the stemcell and all provisioned a9s Redis for PCF service instances to their lastest version after updating the tile.<br />
The errand has to be run manually as explained below.

<p class="note"><strong>Note</strong>: It is recommended to run the <a href="./installing.html#errands" target="_blank">smoke tests</a> before running this errand.</p>

<p class="note"><strong>Note</strong>: To use the errand must know how to use the Ops Manager Director. For more information, see the
<a href="http://docs.pivotal.io/pivotalcf/1-9/customizing/trouble-advanced.html#prepare" target="_blank">Advanced Troubleshooting with the BOSH CLI</a> topic.</p>
1. SSH into Ops Manager
<pre class="terminal">
$ ssh ubuntu@OPS-MANAGER-FQDN
Password: ***********
</pre>
2. Target the BOSH Director
<pre class="terminal">
$ bosh --ca-cert /var/tempest/workspaces/default/root\_ca\_certificate target OPS-MANAGER-DIRECTOR-IP
Target set to DIRECTOR\_UUID
</pre>
3. Log into BOSH Director
<pre class="terminal">
$ bosh login
Your username: director
Enter password: DIRECTOR\_CREDENTIAL
Logged in as 'director'
</pre>
4. Locate the a9s Redis for PCF deployment name.
<pre class="terminal">
$ bosh deployments
</pre>
The output should look similar to this:
<pre class="terminal">
Acting as user 'director' on 'p-bosh'
+------------------------------------------+-------------------------------+-------------
| Name                                     | Release(s)                    | Stemcell(s)
+------------------------------------------+-------------------------------+-------------
| a9s-bosh-a40c3b10d101faca4fbc            | bosh-aws-cpi/53               | bosh-vsphere
| ...
+------------------------------------------+-------------------------------+-------------
| a9s-consul-dns-3f3a49fb941f8c0874cb      | consul/9                      | bosh-vsphere
| ...
+------------------------------------------+-------------------------------+-------------
| a9s-redis-service-94443f82b52dcf333bbd   | bosh-configurator-redis/1     | bosh-vsphere
| ...
+------------------------------------------+-------------------------------+-------------
</pre>
5. All deployment manifests are stored in the folder `/var/tempest/workspaces/default/deployments/` .
Choose the `a9s-redis-service-...` deployment.
<pre class="terminal">
$ bosh deployment /var/tempest/workspaces/default/deployments/a9s-redis-service-94443f82b52dcf333bbd.yml
% Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                               Dload  Upload   Total   Spent    Left  Speed
100   352  100   352    0     0  12014      0 --:--:-- --:--:-- --:--:-- 12137
Deployment set to '/var/tempest/workspaces/default/deployments/a9s-redis-service-94443f82b52dcf333bbd.yml'</pre>
6. Run `bosh run errand deployment-updater` to force a service instances update for all existing a9s Redis for PCF instances.
<pre class="terminal">
$ bosh run errand deployment-updater
% Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                               Dload  Upload   Total   Spent    Left  Speed
100   352  100   352    0     0  26378      0 --:--:-- --:--:-- --:--:-- 27076
Acting as user 'director' on deployment 'a9s-redis-service-94443f82b52dcf333bbd' on 'p-bosh'
&nbsp;
Director task 6533
Started preparing deployment > Preparing deployment. Done (00:00:01)
&nbsp;
...
&nbsp;
Errand 'deployment-updater' completed successfully (exit code 0)
</pre>
<p class="note"><strong>Note</strong>: Depending on the number of service instances, the Deployment Updater may take a signification amount of time. While the errand runs, BOSH shows no logging output from the errand.</p>
