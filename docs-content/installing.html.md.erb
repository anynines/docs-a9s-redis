---
title: Installing and Configuring the a9s Redis
owner: Partners
---

This topic describes how to install and configure a9s Redis.


## <a id='install'></a> Install a9s Redis

To install a9s Redis, do the following:

1. Download the product file from [Pivotal Network](https://network.pivotal.io/products/a9s-redis).

1. Navigate to the Ops Manager Installation Dashboard and click **Import a Product**
  to upload the product file.

1. Click **Add** or **+** (depending on the PCF version) next to the uploaded
  a9s Redis tile in the Ops Manager **Available Products** view to add it to your
  staging area.

1. Click the new tile, then click **Settings** to review the configuration
  settings for each tab. For more information on how to configure the properties
  on each side-tab, see the following:
* [Assign AZs and Networks](installing.html#azs)
* [Plan Configuration](installing.html#plan-configuration)
* [Backup Configuration](installing.html#backup_configuration)
* [Service Configuration](installing.html#service_configuration)
* [Management Cluster](installing.html#management)
* [Configure BOSH Errands](installing.html#errands)
* [Configure Resources](installing.html#resource-config)

1. Click **Apply Changes** to deploy the service.

After you install the a9s Redis, it is available in the list of Marketplace services.
For more information, see [Using a9s Redis for PCF](./using.html).

### <a id="azs"></a> Assign AZs and Networks

Use **Assign AZs and Networks** to configure the location of service component
and service instance jobs. Configure your network to balance cluster jobs between
as many AZs as possible.

<%= image_tag("assign_azs_and_networks.png") %>

### <a id="plan-configuration"></a> Plan Configuration

1. Define the AZ placement where the service instances are deployed into.

1. Define the VM and persistent disk types.

VM and persistent disk types are used in the service instance deployments.
Disk size and VM size (CPUs and memory) can be configured independently to create
your desired plans. However, consider that moving from a larger disk to a smaller
disk is likely to fail.

#### <a id='min-reqs'></a> Minimum System Requirements

| Disk nano | 2&nbsp;GB |
| Disk small | 4&nbsp;GB |
| Disk medium | 10&nbsp;GB |
| Disk large | 30&nbsp;GB |
| VM nano | 1 CPU, 1&nbsp;GB RAM, 4&nbsp;GB Disk |
| VM small | 1 CPU, 2&nbsp;GB RAM, 4&nbsp;GB Disk |
| VM medium | 2 CPU, 4&nbsp;GB RAM, 8&nbsp;GB Disk |
| VM large | 4 CPU, 8&nbsp;GB RAM, 30&nbsp;GB Disk |

<%= image_tag("plan_configuration.png") %>

### <a id="backup_configuration"></a> Backup Configuration

Use **Backup Configuration** to configure the backup endpoints. You can choose
between a S3 compliant endpoint and an Azure blob store.

#### Configure S3 Compliant Backup Storage

<%= image_tag("backup_configuration_s3.png") %>

<table class="nice">
  <th>Field</th>
  <th>Description</th>
  <tr>
    <td>Minimum backups per Instance</td>
    <td>The minimum number of backups for any instance before the oldest backup
        is deleted.</td>
  </tr>
  <tr>
    <td>Minimum Backup Age</td>
    <td>The number of days a backup must be stored before it can be deleted.</td>
  </tr>
  <tr>
    <td>Number of workers</td>
    <td>The amount of worker the rails puma server uses to operate. This is
        necessary because a download of a backup blocks one worker.</td>
  </tr>
  <tr>
    <td>Full Backup Repeat</td>
    <td>Set the time for a full backup. Use cronjob formatting. Only asterisks
        and numbers are allowed.<br>
        Format: (Minute) (Hour) (Day of the month) (Month) (Day of the week).<br>
        For example, <code>30 0 * * *</code> </td>
  </tr>
  <tr>
    <td>Delete Backup Repeat</td>
    <td>Set the time to delete backups. Use cronjob formatting. Only asterisks
        and numbers are allowed.<br>
        Format: (Minute) (Hour) (Day of the month) (Month) (Day of the week).<br>
        For example, <code> 30 0 * * *</code> </td>
  </tr>
  <tr>
    <td>AWS Endpoint</td>
    <td>You can define an alternative S3 endpoint than AWS. I.e. 'http://10.0.4.121:9000/'
        Keep it empty to use AWS S3 endpoint.</td>
  </tr>
  <tr>
    <td>AWS Access Key Id</td>
    <td>AWS access key ID.</td>
  </tr>
  <tr>
    <td>AWS Secret Access Key</td>
    <td>AWS access access key.</td>
  </tr>
  <tr>
    <td>AWS Region</td>
    <td>AWS region of the bucket.</td>
  </tr>
  <tr>
    <td>AWS Bucket</td>
    <td>AWS bucket name.</td>
  </tr>
</table>

#### Configure Azure Backup Storage

<%= image_tag("backup_configuration_azure.png") %>

<table class="nice">
  <th>Field</th>
  <th>Description</th>
  <tr>
    <td>Minimum backups per Instance</td>
    <td>The minimum number of backups for any instance before the oldest backup is
        deleted.</td>
  </tr>
  <tr>
    <td>Minimum Backup Age</td>
    <td>The number of days a backup must be stored before it can be deleted.</td>
  </tr>
  <tr>
    <td>Number of workers</td>
    <td>The amount of worker the rails puma server uses to operate. This is
        necessary because a download of a backup blocks one worker.</td>
  </tr>
  <tr>
    <td>Full Backup Repeat</td>
    <td>Set the time for a full backup. Use cronjob formatting. Only asterisks
        and numbers are allowed.<br>
        Format: (Minute) (Hour) (Day of the month) (Month) (Day of the week).<br>
        For example, <code>30 0 * * *</code> </td>
  </tr>
  <tr>
    <td>Delete Backup Repeat</td>
    <td>Set the time to delete backups. Use cronjob formatting. Only asterisks
        and numbers are allowed.<br>
        Format: (Minute) (Hour) (Day of the month) (Month) (Day of the week).<br>
        For example, <code> 30 0 * * *</code> </td>
  </tr>
  <tr>
    <td>Azure Storage Account Name</td>
    <td>The Azure storage account name.</td>
  </tr>
  <tr>
    <td>Azure Storage Access Key</td>
    <td>The Azure storage access key.</td>
  </tr>
  <tr>
    <td>Azure Container</td>
    <td>The name of the azure container.</td>
  </tr>
</table>

### <a id="service_configuration"></a>Service Configuration

On the Service Configuration page, you can set default endpoints for Graphite
and syslog. For example, you might use `logs.papertrail.com:44456` for the
syslog endpoint.

<%= image_tag("service_configuration.png") %>

<table class="nice">
  <th>Field</th>
  <th>Description</th>
  </tr>
  <tr>
    <td>Allow block automatic updates.</td>
    <td>Allow or forbid the Service Instance user to block automatic updates.
        If it`s not allowed the dashboard doesn't show this information.</td>
  </tr>
  <tr>
    <td>Allow backup download</td>
    <td>Allow the service instance user to download backups in the service dashboard.</td>
  </tr>
  <tr>
    <td>Allow instance re-create</td>
    <td>Allow the service instance user to recreate the service instance in the
        service dashboard.</td>
  </tr>
  <tr>
    <td>Allow instance restart</td>
    <td>Allow the service instance user to restart the service instance in the
        service dashboard.</td>
  </tr>
  <tr>
    <td>Minimum encryption key length</td>
    <td>Minimum key length for the backup encryption keys defined by the application
        developer.</td>
  </tr>
  <tr>
    <td>Service Instance Sharing</td>
    <td>Allow service instance sharing in CF </td>
  </tr>
  <tr>
    <td>Internal Syslog Endpoint</td>
    <td>Define an internal syslog endpoint for all service instances created by
        the user.</td>
  </tr>
  <tr>
    <td>Internal Graphite Endpoint</td>
    <td>Define an internal Graphite endpoint for all service instances created
        by the user.</td>
  </tr>
</table>

<p class="note"><strong>Note:</strong> The syslog and Graphite endpoints cannot
be deleted or updated by the end user.</p>

### <a id='management'></a> Management Cluster

All settings on this page are related to the components of the service offering
and not to the service instances.

<%= image_tag("management_cluster.png") %>

#### <a id='dns-domain'></a> DNS Domain
<table class="nice">
  <th>Field</th>
  <th>Description</th>
  </tr>
  <tr>
    <td>Configure DNS Domain</td>
    <td>The DNS domain for this installation. All instances are created under
        this name. See <a href="name-resolving.html">Name resolving with consul</a>
        for more information.</td>
  <tr>
</table>

#### <a id='syslog-forwarding'></a> Syslog Forwarding
When syslog forwarding is enabled all logs are forwarded to the syslog endpoint
you configure here.

<table class="nice">
  <th>Field</th>
  <th>Description</th>
  <tr>
  <td>Syslog Address</td>
  <td>The syslog endpoint.</td>
  </tr>
  <tr>
  <td>Syslog Port</td>
  <td>The port of the syslog endpoint.</td>
  </tr>
  <tr>
  <td>Transport Protocol</td>
  <td>UDP or TCP</td>
  </tr>
  <tr>
  <td>Format For Logs</td>
  <td>RFC 5424 or Legacy Format</td>
  </tr>
  <tr>
  <td>Enable TLS</td>
  <td>You can enable TLS.</td>
  </tr>
  <tr>
  <td>Permitted Peer</td>
  <td>When TLS is enabled enter the name of remote host, for example,
      <code>*.syslogserver.com</code></td>
  </tr>
  <tr>
  <td>Custom CA Certificate</td>
  <td>Only needed when TLS is enabled and the syslog server requires it.</td>
  </tr>
</table>

#### <a id='enable_bosh_dns_handler'></a> Enable BOSH DNS Handler

Enable BOSH DNS Handler for name resolving a9s services within the diego cells.
Read the installation instructions carefully before you enable the feature you
can find <a href="name-resolving.html#name-resolving-with-a9s-bosh-dns-handler">here</a>.

### <a id='errands'></a> Configure Errands

Use **Errands** to configure the lifecycle errands that run when you install or
uninstall a9s Redis. The list below describes each errand. For more information,
see [Understanding Lifecycle Errands](https://docs.pivotal.io/tiledev/tile-errands.html).

<%= image_tag("errands.png") %>

#### <a id='post-deploy'></a> Post-Deploy Errands

* **Run Template Uploader**: This errand is required to configure generic components
  that are included in a9s Redis with Redis  configurations. Disabling this errand
  may speed up the deployment of all tiles.
  &nbsp;
  <p class="note"><strong>Note:</strong> To ensure your configuration remains
  up-to-date, disable this errand only when necessary.</p>
  &nbsp;
* **Run Broker Registrar**: This errand registers the a9s Redis service broker at
  the Elastic Runtime. This makes the service available in the Marketplace.

* **Run Smoke Tests**: This errand runs a series of basic tests against your
  a9s Redis installation to ensure that it is configured properly. Those tests
  may take a while, probably over 30 minutes.

#### <a id='pre-delete'></a> Pre-Delete Errands

* **Delete all a9s Redis instances**: This errand deletes all a9s Redis instances
  which were created with `cf create-service` by PCF end users.
  &nbsp;
  <p class="note warning"><strong>WARNING:</strong> This is an absolutely destructive
  task and cannot be undone. All VMs of the service instances are deleted
  irrecoverably. In the case a service instance is bound to an app or service
  keys are existing, The errand fails.</p>
  &nbsp;

* **Run Broker Deregistrar**: This deregisters the a9s Redis service broker in
  Pivotal Application Services. This errand removes the Redis service from the
  Marketplace.

### <a id='resource-config'></a> Configure Resources

You can configure the dimensions of the VMs that host the a9s Redis components.
This configuration does not cover the dedicated Redis instances that run on VMs
provided. For more information, see [Configure Service Plan VMs](installing.html#plan-configuration).

<p class="note"><strong>Note:</strong> anynines recommends using a VM type of
large or greater to support the tile compilation.</p>

<%= image_tag("resource_config.png") %>
